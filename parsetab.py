
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb8\xfc4\xd8`e\xec&\x81E`\xeba\xdf\x9a\x19'
    
_lr_action_items = {'RESERVED_VAR':([0,1,8,10,12,14,15,19,20,22,24,43,65,77,80,81,82,131,132,133,165,188,],[-16,-42,17,-15,-18,-254,-11,-44,-41,-17,-16,-43,-42,140,-11,-11,-11,-19,17,-10,-45,140,]),'REALNUMBER':([23,47,49,53,58,60,74,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,390,391,411,414,426,],[46,46,-38,-37,46,46,-255,-242,-241,-245,46,-243,-244,46,-251,-249,46,-240,-247,-252,-250,-248,-239,-237,-246,-238,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-201,-202,46,46,46,]),'RESERVED_FUNCTION':([0,1,8,10,12,14,15,18,19,20,22,24,43,65,71,75,77,80,81,82,131,132,133,165,183,188,],[-16,-42,-96,-15,-18,-254,-11,36,-44,-41,-17,-16,-43,-42,-95,36,142,-11,-11,-11,-19,-96,-10,-45,36,142,]),'ASSIGNMENT':([11,243,246,251,271,297,302,303,334,360,395,],[-253,-172,295,-173,-171,-174,-199,338,-179,-175,411,]),'RESERVED_CASE':([14,95,198,226,264,293,301,313,335,340,342,380,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,167,167,240,240,240,240,167,240,240,240,167,240,240,240,240,-197,240,240,240,-198,240,240,240,]),'RESERVED_XOR':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,180,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,350,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,119,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,119,-29,-31,-172,-173,-214,-215,-219,-220,119,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,119,-231,-221,-212,-175,-182,]),'RESERVED_CONST':([0,14,15,24,80,81,82,133,],[3,-254,-11,3,-11,-11,-11,-10,]),'RESERVED_LABEL':([14,15,80,81,82,],[-254,25,25,25,25,]),'RESERVED_FILE':([44,72,104,173,201,237,],[100,100,100,100,100,100,]),'SEMI_COLON':([5,11,14,16,29,31,32,33,37,38,39,40,41,42,45,46,48,50,51,52,54,55,56,57,59,61,62,63,64,66,67,68,76,78,79,84,86,87,88,89,90,91,92,93,94,96,98,101,102,103,106,114,129,135,136,137,139,141,143,144,145,147,148,149,150,153,154,155,156,157,158,159,160,161,163,164,166,168,174,176,177,178,179,180,181,182,184,187,191,192,193,199,200,202,206,207,208,209,210,211,214,215,216,219,221,224,225,226,227,230,232,235,238,239,241,242,243,244,245,247,248,250,251,252,253,255,256,258,259,260,261,262,263,264,266,268,270,271,276,277,278,279,281,282,283,284,285,290,291,293,294,297,300,301,304,305,310,315,317,320,324,328,329,330,334,335,336,337,340,342,346,348,349,350,351,352,355,357,358,360,361,362,365,366,369,374,375,376,379,381,384,385,392,394,401,402,403,404,405,408,409,410,412,413,415,416,417,418,420,423,424,425,427,428,430,],[14,-253,-254,-4,14,-98,14,-108,-103,14,14,-105,-104,14,-22,-229,-227,-225,-223,-20,-228,-224,-28,-32,-24,-27,-226,-30,14,14,-13,-14,-109,-123,-131,-60,-48,-49,-58,-36,-34,-51,-39,14,-52,-59,-57,-55,-47,-50,-46,-26,-33,-5,-97,-99,-102,-115,-116,-117,14,-121,-118,-122,-114,-126,-132,-106,-111,-107,-110,-124,-125,-127,-40,-35,-72,14,-56,-93,-94,-25,-23,-21,-29,-31,-12,-112,-130,-128,-54,-68,-70,-53,-65,-66,-67,-92,-91,-90,-113,-119,-129,-71,-73,-8,-133,-154,-120,-80,14,-69,-153,-140,-150,14,-172,-145,-170,-155,-138,-146,-173,-143,-144,-136,-148,-151,-158,-137,-147,-156,-152,-154,-149,-157,-142,-181,-61,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-154,-134,-174,-206,-154,14,-188,-180,-79,-213,-222,-232,-230,-135,-169,-179,-154,-139,-141,-154,-154,14,-216,-210,-208,-195,383,-231,-221,-212,-175,-161,-160,-159,-138,-166,-165,-164,-182,-81,-83,-189,-154,-154,-154,-154,-197,-194,-190,-196,-168,-167,-154,-154,-154,-82,422,-198,-154,-138,-191,-163,-162,-154,-192,-154,]),'RESERVED_EXIT':([14,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,245,245,245,245,245,245,245,245,245,245,245,-197,245,245,245,-198,245,245,245,]),'RESERVED_DIV':([11,45,46,48,50,51,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,112,-229,-227,-225,-223,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,112,-29,-31,-172,-173,-214,-215,-219,-220,-217,-211,-218,112,-171,-174,-213,-222,-232,-230,-179,-216,112,-231,-221,-212,-175,-182,]),'RESERVED_DO':([11,46,48,50,51,54,55,62,243,251,277,278,279,281,282,283,284,285,290,291,297,299,300,307,308,309,317,320,324,328,334,348,349,350,355,357,358,360,373,376,393,397,406,407,429,],[-253,-229,-227,-225,-223,-228,-224,-226,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,335,-206,-171,342,-205,-213,-222,-232,-230,-179,-216,-210,-208,-231,-221,-212,-175,-204,-182,410,413,418,-203,430,]),'RESERVED_PROCEDURE':([0,1,8,10,12,14,15,18,19,20,22,24,43,65,71,75,77,80,81,82,131,132,133,165,183,188,],[-16,-42,-96,-15,-18,-254,-11,34,-44,-41,-17,-16,-43,-42,-95,34,34,-11,-11,-11,-19,-96,-10,-45,34,34,]),'MINUS':([11,14,23,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,72,74,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,162,172,173,175,178,179,180,181,182,201,217,222,237,240,243,249,251,267,272,274,275,277,278,279,280,281,282,283,284,285,288,289,290,291,295,296,297,311,317,318,319,320,321,324,327,328,334,338,339,348,349,350,354,355,356,357,358,359,360,367,371,376,377,378,382,383,389,390,391,411,414,426,],[-253,-254,49,49,-22,-229,49,-227,-38,-225,-223,127,-37,-228,-224,-28,-32,-24,49,-27,-226,-30,49,-255,-242,-241,-245,49,-243,-244,-26,49,-251,-249,49,-240,-247,-252,-250,-248,-239,-237,-246,-238,-33,49,49,49,49,-25,-23,127,-29,-31,49,49,49,49,49,-172,49,-173,49,49,49,49,-214,-215,-219,49,-220,127,-217,-211,-218,49,49,-209,-171,49,49,-174,49,-213,49,49,-222,49,-232,49,-230,-179,49,49,-216,-210,127,49,-231,49,-221,-212,49,-175,49,49,-182,49,49,49,-254,49,-201,-202,49,49,49,]),'DOT':([11,26,224,225,243,246,251,271,283,291,294,297,307,309,334,360,373,],[-253,69,-8,-133,-172,298,-173,-171,298,-171,-134,-174,-171,298,-179,-175,298,]),'RESERVED_UNTIL':([11,14,46,48,50,51,54,55,62,68,238,239,241,243,244,245,247,248,250,251,252,253,255,256,258,259,260,261,262,263,264,266,268,270,271,277,278,279,281,282,283,284,285,290,291,293,294,297,300,301,304,305,310,317,320,324,328,329,330,334,335,336,337,340,342,348,349,350,355,357,358,360,361,362,365,366,369,374,375,376,384,392,394,404,408,409,410,412,413,418,420,423,424,425,427,428,430,],[-253,-254,-229,-227,-225,-223,-228,-224,-226,-14,-153,-140,-150,-172,-145,-170,-155,-138,-146,-173,-143,-144,-136,-148,-151,-158,-137,-147,-156,-152,-154,-149,-157,-142,-181,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-154,-134,-174,-206,-154,339,-188,-180,-213,-222,-232,-230,-135,-169,-179,-154,-139,-141,-154,-154,-216,-210,-208,-231,-221,-212,-175,-161,-160,-159,-138,-166,-165,-164,-182,-189,-154,-154,-190,-168,-167,-154,-154,-154,-154,-138,-191,-163,-162,-154,-192,-154,]),'RESERVED_WHILE':([14,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,249,249,249,249,249,367,249,249,249,367,249,-197,367,367,367,-198,249,367,367,]),'GEQ':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,116,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,-29,-31,-172,-173,-214,-215,-219,-220,116,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-231,-221,-212,-175,-182,]),'RPAREN':([11,14,28,33,45,46,48,50,51,52,54,55,56,57,59,61,62,63,70,76,78,84,86,87,88,89,90,91,92,94,96,98,101,102,103,106,114,129,130,138,141,143,144,145,147,148,149,150,163,164,166,171,174,176,177,178,179,180,181,182,187,191,192,193,199,200,202,206,207,208,209,210,211,214,215,216,219,221,227,230,232,235,243,251,275,276,277,278,279,281,282,283,284,285,290,291,297,313,315,317,320,324,326,328,334,343,344,345,346,347,348,349,350,355,357,358,360,376,379,380,381,398,399,400,415,421,],[-253,-254,-7,-108,-22,-229,-227,-225,-223,-20,-228,-224,-28,-32,-24,-27,-226,-30,135,-109,-123,-60,-48,-49,-58,-36,-34,-51,-39,-52,-59,-57,-55,-47,-50,-46,-26,-33,182,-6,-115,-116,-117,187,-121,-118,-122,-114,-40,-35,-72,202,-56,-93,-94,-25,-23,-21,-29,-31,-112,-130,-128,-54,-68,-70,-53,-65,-66,-67,-92,-91,-90,-113,-119,-129,-71,-73,-120,-80,-75,-69,-172,-173,-74,-61,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,-76,-79,-213,-222,-232,357,-230,-179,376,-184,-185,379,381,-216,-210,-208,-231,-221,-212,-175,-182,-81,-76,-83,-183,-186,415,-82,-187,]),'POWER':([11,46,48,50,51,54,55,56,57,62,63,129,182,243,251,278,279,281,283,285,291,297,320,324,328,334,355,357,360,376,],[-253,-229,-227,-225,-223,-228,-224,128,-32,-226,-30,-33,-31,-172,-173,316,-219,-220,-217,-218,-171,-174,-222,-232,-230,-179,-231,-221,-175,-182,]),'RESERVED_SET':([44,72,104,173,201,237,],[105,105,105,105,105,105,]),'RESERVED_NIL':([23,47,49,53,58,60,74,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,390,391,411,414,426,],[50,50,-38,-37,50,50,-255,-242,-241,-245,50,-243,-244,50,-251,-249,50,-240,-247,-252,-250,-248,-239,-237,-246,-238,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-201,-202,50,50,50,]),'NE':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,120,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,-29,-31,-172,-173,-214,-215,-219,-220,120,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-231,-221,-212,-175,-182,]),'RESERVED_PROGRAM':([0,],[7,]),'DOTDOT':([11,46,48,50,51,54,55,62,83,89,90,92,106,163,164,207,228,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,323,324,325,328,334,348,349,350,355,357,358,360,376,386,387,],[-253,-229,-227,-225,-223,-228,-224,-226,162,-36,-34,-39,-40,-40,-35,-40,272,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,-213,-222,356,-232,-236,-230,-179,-216,-210,-208,-231,-221,-212,-175,-182,356,-235,]),'LT':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,123,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,-29,-31,-172,-173,-214,-215,-219,-220,123,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-231,-221,-212,-175,-182,]),'COLON':([11,28,30,46,48,50,51,54,55,62,68,79,89,90,92,138,146,151,163,164,170,185,186,187,195,196,228,229,231,243,251,254,277,278,279,281,282,283,284,285,290,291,297,312,314,317,320,324,328,334,345,348,349,350,353,355,357,358,360,368,376,399,402,],[-253,-7,72,-229,-227,-225,-223,-228,-224,-226,-14,152,-36,-34,-39,-6,189,190,-40,-35,201,213,152,-112,-88,218,-86,-85,273,-172,-173,301,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,-87,-84,-213,-222,-232,-230,-179,378,-216,-210,-208,385,-231,-221,-212,-175,394,-182,414,417,]),'PLUS':([11,14,23,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,72,74,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,162,172,173,175,178,179,180,181,182,201,217,222,237,240,243,249,251,267,272,274,275,277,278,279,280,281,282,283,284,285,288,289,290,291,295,296,297,311,317,318,319,320,321,324,327,328,334,338,339,348,349,350,354,355,356,357,358,359,360,367,371,376,377,378,382,383,389,390,391,411,414,426,],[-253,-254,53,53,-22,-229,53,-227,-38,-225,-223,125,-37,-228,-224,-28,-32,-24,53,-27,-226,-30,53,-255,-242,-241,-245,53,-243,-244,-26,53,-251,-249,53,-240,-247,-252,-250,-248,-239,-237,-246,-238,-33,53,53,53,53,-25,-23,125,-29,-31,53,53,53,53,53,-172,53,-173,53,53,53,53,-214,-215,-219,53,-220,125,-217,-211,-218,53,53,-209,-171,53,53,-174,53,-213,53,53,-222,53,-232,53,-230,-179,53,53,-216,-210,125,53,-231,53,-221,-212,53,-175,53,53,-182,53,53,53,-254,53,-201,-202,53,53,53,]),'STRING':([14,23,44,47,49,53,58,60,72,74,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,162,172,173,175,201,217,222,237,240,249,267,272,274,275,280,286,288,289,295,296,311,316,318,319,321,327,338,339,354,356,359,367,371,377,378,382,383,389,390,391,411,414,426,],[-254,55,89,55,-38,-37,55,55,89,-255,-242,-241,-245,55,-243,-244,55,-251,-249,55,-240,-247,-252,-250,-248,-239,-237,-246,-238,55,89,89,89,89,89,89,89,89,55,55,55,89,89,89,55,55,55,55,55,55,55,55,55,55,89,55,55,55,55,55,55,55,55,55,55,89,-254,55,-201,-202,55,55,55,]),'IDENTIFIER':([3,7,9,10,12,14,17,19,20,22,23,27,34,36,43,44,47,49,53,58,60,71,72,73,74,77,85,95,97,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,140,142,152,162,165,167,172,173,175,188,189,190,198,201,213,217,218,222,226,237,240,249,257,264,267,269,272,274,275,280,286,288,289,293,295,296,298,301,311,313,316,318,319,321,327,335,338,339,340,341,342,354,356,359,367,370,371,372,377,378,380,382,383,385,389,390,391,392,394,401,402,410,411,412,413,414,417,418,426,427,430,],[11,11,11,11,-18,-254,11,-44,11,-17,11,11,11,11,-43,11,11,-38,-37,11,11,11,11,11,-255,11,11,11,11,11,-242,-241,-245,11,-243,-244,11,-251,-249,11,-240,-247,-252,-250,-248,-239,-237,-246,-238,11,-19,11,11,11,11,-45,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-254,11,11,-201,-202,11,11,11,-197,11,11,11,11,11,-198,11,11,11,11,]),'DIGITSEQ':([14,23,25,44,47,49,53,58,60,72,74,85,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,134,162,172,173,175,201,217,222,226,237,240,249,264,265,267,272,274,275,280,286,288,289,293,295,296,311,316,318,319,321,327,335,338,339,340,342,354,356,359,367,371,377,378,382,383,385,389,390,391,392,401,402,410,411,412,413,414,417,418,426,427,430,],[-254,54,68,92,54,-38,-37,54,54,92,-255,92,-242,-241,-245,54,-243,-244,54,-251,-249,54,-240,-247,-252,-250,-248,-239,-237,-246,-238,54,68,92,92,92,92,92,92,92,68,92,54,54,68,68,54,92,92,92,54,54,54,54,68,54,54,54,54,54,54,92,54,68,54,54,68,68,54,54,54,54,54,54,54,92,-254,68,54,-201,-202,68,68,-197,68,54,68,68,54,-198,68,54,68,68,]),'R_SQUARE_BRACKET':([11,46,48,50,51,54,55,62,89,90,91,92,94,163,164,193,202,203,204,205,206,207,236,243,251,277,278,279,281,282,283,284,285,288,290,291,297,317,320,322,323,324,325,328,331,332,333,334,348,349,350,355,357,358,360,376,386,387,388,],[-253,-229,-227,-225,-223,-228,-224,-226,-36,-34,-51,-39,-52,-40,-35,-54,-53,-63,-64,223,-65,-66,-62,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,324,-209,-171,-174,-213,-222,355,-234,-232,-236,-230,360,-177,-178,-179,-216,-210,-208,-231,-221,-212,-175,-182,-233,-235,-176,]),'RESERVED_END':([11,14,46,48,50,51,54,55,62,68,84,86,87,88,89,90,91,92,94,95,96,98,101,102,103,106,163,164,166,168,169,174,176,177,193,198,199,200,202,206,207,208,209,210,211,219,220,221,226,230,232,235,238,239,241,242,243,244,245,247,248,250,251,252,253,255,256,258,259,260,261,262,263,266,268,270,271,275,276,277,278,279,281,282,283,284,285,290,291,293,294,297,300,301,305,310,315,317,320,324,328,329,330,334,335,336,337,340,342,348,349,350,351,352,355,357,358,360,361,362,365,366,369,374,375,376,379,381,383,384,385,392,394,401,402,403,404,405,408,409,410,412,413,415,416,417,418,420,422,423,424,425,427,428,430,],[-253,-254,-229,-227,-225,-223,-228,-224,-226,-14,-60,-48,-49,-58,-36,-34,-51,-39,-52,-76,-59,-57,-55,-47,-50,-46,-40,-35,-72,199,200,-56,-93,-94,-54,-76,-68,-70,-53,-65,-66,-67,-92,-91,-90,-71,235,-73,-154,-80,-75,-69,-153,-140,-150,294,-172,-145,-170,-155,-138,-146,-173,-143,-144,-136,-148,-151,-158,-137,-147,-156,-152,-149,-157,-142,-181,-74,-61,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-154,-134,-174,-206,-154,-188,-180,-79,-213,-222,-232,-230,-135,-169,-179,-154,-139,-141,-154,-154,-216,-210,-208,-195,384,-231,-221,-212,-175,-161,-160,-159,-138,-166,-165,-164,-182,-81,-83,404,-189,-154,-154,-154,-154,-197,-194,-190,-196,-168,-167,-154,-154,-154,-82,423,-198,-154,-138,428,-191,-163,-162,-154,-192,-154,]),'$end':([0,1,2,4,6,8,10,12,14,18,19,20,22,35,43,69,71,75,131,165,],[-16,-42,-2,-1,0,-96,-15,-18,-254,-101,-44,-41,-17,-9,-43,-3,-95,-100,-19,-45,]),'RESERVED_FOR':([14,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,257,257,257,257,257,370,257,257,257,370,257,-197,370,370,370,-198,257,370,370,]),'GT':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,117,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,-29,-31,-172,-173,-214,-215,-219,-220,117,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-231,-221,-212,-175,-182,]),'DIVIDE':([11,45,46,48,50,51,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,108,-229,-227,-225,-223,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,108,-29,-31,-172,-173,-214,-215,-219,-220,-217,-211,-218,108,-171,-174,-213,-222,-232,-230,-179,-216,108,-231,-221,-212,-175,-182,]),'RESERVED_RECORD':([44,72,104,173,201,237,],[95,95,95,95,95,95,]),'RESERVED_EXTERNAL':([14,81,82,],[-254,156,156,]),'RESERVED_NOT':([23,47,49,53,58,60,74,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,390,391,411,414,426,],[58,58,-38,-37,58,58,-255,-242,-241,-245,58,-243,-244,58,-251,-249,58,-240,-247,-252,-250,-248,-239,-237,-246,-238,58,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,-201,-202,286,286,286,]),'TIMES':([11,45,46,48,50,51,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,109,-229,-227,-225,-223,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,109,-29,-31,-172,-173,-214,-215,-219,-220,-217,-211,-218,109,-171,-174,-213,-222,-232,-230,-179,-216,109,-231,-221,-212,-175,-182,]),'RESERVED_BEGIN':([10,12,14,15,19,20,22,24,43,65,71,75,80,81,82,131,132,133,165,183,212,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-15,-18,-254,-11,-44,-41,-17,-16,-43,-42,-95,-100,-11,-11,-11,-19,-96,-10,-45,-101,226,226,226,226,226,226,226,226,226,226,226,226,-197,226,226,226,-198,226,226,226,]),'RESERVED_OTHERWISE':([382,383,],[402,-254,]),'RESERVED_AND':([11,45,46,48,50,51,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,110,-229,-227,-225,-223,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,110,-29,-31,-172,-173,-214,-215,-219,-220,-217,-211,-218,110,-171,-174,-213,-222,-232,-230,-179,-216,110,-231,-221,-212,-175,-182,]),'L_SQUARE_BRACKET':([11,49,53,74,99,108,109,110,112,113,116,117,119,120,121,122,123,124,125,126,127,240,243,246,249,251,267,271,280,283,286,288,289,291,295,296,297,307,309,311,316,318,319,327,334,338,339,354,356,359,360,367,371,373,377,378,389,390,391,411,414,426,],[-253,-38,-37,-255,172,-242,-241,-245,-243,-244,-251,-249,-240,-247,-252,-250,-248,-239,-237,-246,-238,288,-172,296,288,-173,288,-171,288,296,288,288,288,-171,288,288,-174,-171,296,288,288,288,288,288,-179,288,288,288,288,288,-175,288,288,296,288,288,288,-201,-202,288,288,288,]),'LPAREN':([11,16,23,33,44,47,49,53,58,60,72,74,78,79,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,172,173,175,186,201,222,237,240,249,267,271,273,280,286,288,289,291,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,390,391,411,414,426,],[-253,27,60,77,97,60,-38,-37,60,60,97,-255,-123,77,-242,-241,-245,60,-243,-244,60,-251,-249,60,-240,-247,-252,-250,-248,-239,-237,-246,-238,60,97,97,97,77,97,97,97,289,289,289,311,313,289,289,289,289,311,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,-201,-202,289,289,289,]),'EQ':([11,13,21,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,23,44,-22,-229,-227,-225,-223,126,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,-29,-31,-172,-173,-214,-215,-219,-220,126,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-231,-221,-212,-175,-182,]),'RESERVED_TYPE':([0,1,10,12,14,15,22,24,65,80,81,82,131,133,],[-16,9,-15,-18,-254,-11,-17,-16,9,-11,-11,-11,-19,-10,]),'RESERVED_IF':([14,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,267,267,267,267,267,371,267,267,267,371,267,-197,371,371,371,-198,267,371,371,]),'RESERVED_ARRAY':([44,72,104,173,201,237,],[99,99,99,99,99,99,]),'RESERVED_ELSE':([11,46,48,50,51,54,55,62,68,238,241,243,244,245,250,251,252,253,256,258,261,263,266,270,271,277,278,279,281,282,283,284,285,290,291,294,297,300,301,305,310,317,320,324,328,330,334,335,337,340,342,348,349,350,355,357,358,360,361,365,366,374,376,384,392,394,404,408,410,412,413,418,420,423,424,427,428,430,],[-253,-229,-227,-225,-223,-228,-224,-226,-14,-153,-150,-172,-145,-170,-146,-173,-143,-144,-148,-151,-147,-152,-149,-142,-181,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-134,-174,-206,-154,-188,-180,-213,-222,-232,-230,-169,-179,-154,-141,-154,-154,-216,-210,-208,-231,-221,-212,-175,-161,-159,392,-165,-182,-189,-154,-154,-190,-168,-154,-154,-154,-154,427,-191,-163,-154,-192,-154,]),'RESERVED_OR':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,180,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,350,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,124,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,124,-29,-31,-172,-173,-214,-215,-219,-220,124,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,124,-231,-221,-212,-175,-182,]),'RESERVED_REPEAT':([14,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,264,264,264,264,264,264,264,264,264,264,264,-197,264,264,264,-198,264,264,264,]),'RESERVED_GOTO':([14,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,265,265,265,265,265,265,265,265,265,265,265,-197,265,265,265,-198,265,265,265,]),'RESERVED_WITH':([14,226,264,293,301,335,340,342,385,392,394,401,402,410,412,413,417,418,427,430,],[-254,269,269,269,269,269,372,269,269,269,372,269,-197,372,372,372,-198,269,372,372,]),'RESERVED_TO':([11,46,48,50,51,54,55,62,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,350,355,357,358,360,363,364,376,419,],[-253,-229,-227,-225,-223,-228,-224,-226,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-208,-231,-221,-212,-175,390,-200,-182,390,]),'RESERVED_IN':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,121,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,-29,-31,-172,-173,-214,-215,-219,-220,121,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-231,-221,-212,-175,-182,]),'RESERVED_DOWNTO':([11,46,48,50,51,54,55,62,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,350,355,357,358,360,363,364,376,419,],[-253,-229,-227,-225,-223,-228,-224,-226,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-208,-231,-221,-212,-175,391,-200,-182,391,]),'RESERVED_PACKED':([44,72,173,201,237,],[104,104,104,104,104,]),'LEQ':([11,45,46,48,50,51,52,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,282,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,-22,-229,-227,-225,-223,122,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,-23,-29,-31,-172,-173,-214,-215,-219,-220,122,-217,-211,-218,-209,-171,-174,-213,-222,-232,-230,-179,-216,-210,-231,-221,-212,-175,-182,]),'RESERVED_THEN':([11,46,48,50,51,54,55,62,243,251,277,278,279,281,282,283,284,285,290,291,297,300,306,317,320,324,328,334,348,349,350,355,357,358,360,376,396,],[-253,-229,-227,-225,-223,-228,-224,-226,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,-206,340,-213,-222,-232,-230,-179,-216,-210,-208,-231,-221,-212,-175,-182,412,]),'RESERVED_OF':([11,46,48,50,51,54,55,62,100,105,194,195,197,223,233,234,243,251,277,278,279,281,282,283,284,285,287,290,291,292,297,317,320,324,328,334,348,349,350,355,357,358,360,376,],[-253,-229,-227,-225,-223,-228,-224,-226,173,175,217,-89,-78,237,-89,-77,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,321,-209,-171,-193,-174,-213,-222,-232,-230,-179,-216,-210,-208,-231,-221,-212,-175,-182,]),'RESERVED_MOD':([11,45,46,48,50,51,54,55,56,57,59,61,62,63,114,129,178,179,181,182,243,251,277,278,279,281,283,284,285,290,291,297,317,320,324,328,334,348,349,355,357,358,360,376,],[-253,113,-229,-227,-225,-223,-228,-224,-28,-32,-24,-27,-226,-30,-26,-33,-25,113,-29,-31,-172,-173,-214,-215,-219,-220,-217,-211,-218,113,-171,-174,-213,-222,-232,-230,-179,-216,113,-231,-221,-212,-175,-182,]),'RESERVED_FORWARD':([14,81,82,],[-254,158,158,]),'COMMA':([11,28,30,46,48,50,51,54,55,62,66,67,68,70,89,90,91,92,94,138,146,163,164,170,171,184,185,193,202,203,204,205,206,207,228,229,231,236,243,251,277,278,279,281,282,283,284,285,290,291,297,307,308,309,312,314,317,320,322,323,324,325,328,331,332,333,334,343,344,345,348,349,350,353,355,357,358,360,373,376,386,387,388,397,398,399,421,],[-253,-7,74,-229,-227,-225,-223,-228,-224,-226,74,-13,-14,74,-36,-34,-51,-39,-52,-6,74,-40,-35,74,74,-12,74,-54,-53,-63,-64,74,-65,-66,-86,-85,74,-62,-172,-173,-214,-215,-219,-220,-207,-217,-211,-218,-209,-171,-174,-171,74,-205,-87,-84,-213,-222,74,-234,-232,-236,-230,74,-177,-178,-179,74,-184,-185,-216,-210,-208,74,-231,-221,-212,-175,-204,-182,-233,-235,-176,74,-183,-186,-187,]),'POINTER':([11,44,72,173,201,237,243,246,251,271,283,291,297,307,309,334,360,373,],[-253,107,107,107,107,107,-172,297,-173,-171,297,-171,-174,-171,297,-179,-175,297,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cterm':([23,60,115,118,],[45,45,179,45,]),'exponentiation':([240,249,267,280,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[277,277,277,277,277,277,277,277,277,348,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,]),'file_type':([44,72,104,173,201,237,],[84,84,84,84,84,84,]),'variable_declaration_part':([8,132,],[18,183,]),'closed_if_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,]),'new_type':([44,72,173,201,237,],[102,102,102,102,102,]),'comma':([30,66,70,146,170,171,185,205,231,308,322,331,343,353,397,],[73,134,73,73,73,73,73,222,274,341,354,359,377,274,341,]),'exit_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,]),'closed_statement':([226,264,293,335,340,342,385,392,401,410,412,413,418,427,430,],[248,248,248,361,366,374,248,408,248,361,420,374,424,408,424,]),'otherwisepart':([382,],[401,]),'final_value':([389,426,],[406,429,]),'field_designator':([226,240,249,264,267,269,280,286,288,289,293,295,296,301,311,316,318,319,327,335,338,339,340,341,342,354,356,359,367,371,372,377,378,385,389,392,394,401,410,411,412,413,414,418,426,427,430,],[251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,]),'procedure_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,]),'index_type':([172,222,],[203,236,]),'enumerated_type':([44,72,172,173,175,201,222,237,],[91,91,91,91,91,91,91,91,]),'program':([0,],[4,]),'variable_parameter_specification':([77,188,],[143,143,]),'type_definition_list':([9,],[20,]),'unsigned_number':([23,47,58,60,111,115,118,128,240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'formal_parameter_list':([33,79,186,],[76,151,151,]),'formal_parameter_section_list':([77,],[145,]),'index_expression_list':([296,],[331,]),'index_list':([172,],[205,]),'domain_type':([107,],[176,]),'cfactor':([23,47,60,111,115,118,],[59,114,59,178,59,59,]),'case_list_element':([321,382,],[351,403,]),'case_constant':([217,274,275,321,382,],[229,314,229,229,229,]),'case_list_element_list':([321,],[352,]),'type_definition':([9,20,],[19,43,]),'term':([240,249,267,288,289,295,296,311,318,319,338,339,354,356,359,367,371,377,378,389,411,414,426,],[290,290,290,290,290,290,290,290,349,290,290,290,290,290,290,290,290,290,290,290,290,290,290,]),'closed_with_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,]),'record_type':([44,72,104,173,201,237,],[88,88,88,88,88,88,]),'boolean_expression':([249,267,339,367,371,],[299,306,365,393,396,]),'actual_parameter':([311,377,],[344,398,]),'identifier':([3,7,9,10,17,20,23,27,34,36,44,47,58,60,71,72,73,77,85,95,97,107,111,115,118,128,140,142,152,162,167,172,173,175,188,189,190,198,201,213,217,218,222,226,237,240,249,257,264,267,269,272,274,275,280,286,288,289,293,295,296,298,301,311,313,316,318,319,321,327,335,338,339,340,341,342,354,356,359,367,370,371,372,377,378,380,382,385,389,392,394,401,410,411,412,413,414,418,426,427,430,],[13,16,21,13,28,21,63,28,78,79,106,63,63,63,28,106,138,28,163,28,28,177,63,63,63,63,28,186,191,163,195,207,106,207,28,215,191,28,106,227,163,233,207,271,106,291,291,302,271,291,307,163,163,163,291,291,291,291,271,291,291,334,271,291,28,291,291,291,163,291,271,291,291,271,307,271,291,291,291,291,302,291,307,291,291,28,163,271,291,271,271,271,271,291,271,271,291,271,291,271,271,]),'unsigned_integer':([23,47,58,60,111,115,118,128,240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'actual_parameter_list':([311,],[343,]),'label_list':([25,],[66,]),'module':([0,],[2,]),'sign':([23,44,47,60,72,111,115,118,162,172,173,175,201,217,222,237,240,249,267,272,274,275,280,288,289,295,296,311,318,319,321,327,338,339,354,356,359,367,371,377,378,382,389,411,414,426,],[47,85,47,47,85,47,47,47,85,85,85,85,85,85,85,85,280,280,280,85,85,85,280,280,280,280,280,280,280,280,85,280,280,280,280,280,280,280,280,280,280,85,280,280,280,280,]),'procedure_identification':([18,75,77,183,188,],[33,33,33,33,33,]),'goto_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,]),'unsigned_real':([23,47,58,60,111,115,118,128,240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'open_with_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,]),'tag_field':([167,],[196,]),'simple_expression':([240,249,267,288,289,295,296,311,319,338,339,354,356,359,367,371,377,378,389,411,414,426,],[282,282,282,282,282,282,282,282,350,282,282,282,282,282,282,282,282,282,282,282,282,282,]),'constant_definition_part':([0,24,],[1,65,]),'closed_while_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,]),'directive':([81,82,],[155,160,]),'compound_statement':([212,226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[225,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,]),'member_designator_list':([288,],[322,]),'statement_part':([212,],[224,]),'label':([25,134,226,264,265,293,335,340,342,385,392,401,410,412,413,418,427,430,],[67,184,254,254,305,254,254,368,254,254,254,254,368,368,368,254,368,368,]),'proc_or_func_declaration':([18,75,183,],[37,139,37,]),'program_heading':([0,],[5,]),'type_denoter':([44,72,173,201,237,],[93,137,208,221,208,]),'procedural_parameter_specification':([77,188,],[144,144,]),'ordinal_type':([172,175,222,],[204,210,204,]),'cprimary':([23,47,58,60,111,115,118,128,],[56,56,129,56,56,56,56,56,]),'open_for_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,]),'record_variable_list':([269,372,],[308,397,]),'set_type':([44,72,104,173,201,237,],[96,96,96,96,96,96,]),'case_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,]),'open_if_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,]),'array_type':([44,72,104,173,201,237,],[98,98,98,98,98,98,]),'case_index':([240,],[287,]),'type_definition_part':([1,65,],[8,132,]),'constant_list':([3,],[10,]),'function_declaration':([18,75,183,],[40,40,40,]),'component_type':([173,237,],[209,276,]),'function_heading':([18,75,77,183,188,],[42,42,149,42,149,]),'label_declaration_part':([15,80,81,82,],[24,24,24,24,]),'expression':([240,249,267,288,289,295,296,311,338,339,354,356,359,367,371,377,378,389,411,414,426,],[292,300,300,325,326,330,333,345,364,300,325,387,333,300,300,345,399,407,364,421,407,]),'new_pointer_type':([44,72,173,201,237,],[103,103,103,103,103,]),'index_expression':([296,359,],[332,388,]),'procedure_block':([81,],[157,]),'statement_sequence':([226,264,],[242,304,]),'cexpression':([23,60,],[64,130,]),'indexed_variable':([226,240,249,264,267,269,280,286,288,289,293,295,296,301,311,316,318,319,327,335,338,339,340,341,342,354,356,359,367,371,372,377,378,385,389,392,394,401,410,411,412,413,414,418,426,427,430,],[243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,]),'primary':([240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[278,278,278,278,320,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,]),'control_variable':([257,370,],[303,395,]),'constant_definition':([3,10,],[12,22,]),'set_constructor':([240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,]),'proc_or_func_declaration_list':([18,183,],[32,32,]),'value_parameter_specification':([77,188,],[141,141,]),'variable_declaration':([17,71,],[31,136,]),'assignment_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,]),'params':([271,291,],[310,328,]),'statement':([226,264,293,340,385,401,412,],[255,255,329,369,405,416,369,]),'csimple_expression':([23,60,118,],[52,52,180,]),'non_labeled_open_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[239,239,239,336,239,239,239,239,239,336,239,239,239,239,239,239,239,]),'repeat_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,]),'addop':([52,180,282,350,],[115,115,318,318,]),'direction':([363,419,],[389,426,]),'subrange_type':([44,72,172,173,175,201,222,237,],[94,94,94,94,94,94,94,94,]),'factor':([240,249,267,280,288,289,295,296,311,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[284,284,284,317,284,284,284,284,284,284,284,358,284,284,284,284,284,284,284,284,284,284,284,284,284,]),'open_statement':([226,264,293,335,340,342,385,392,401,410,412,413,418,427,430,],[260,260,260,362,260,375,260,409,260,362,260,375,425,409,425,]),'record_section_list':([95,313,],[168,346,]),'variable_declaration_list':([17,],[29,]),'closed_for_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,]),'new_ordinal_type':([44,72,172,173,175,201,222,237,],[86,86,206,86,206,86,206,86,]),'procedure_heading':([18,75,77,183,188,],[39,39,147,39,147,]),'record_section':([95,198,313,380,],[166,219,166,219,]),'procedure_declaration':([18,75,183,],[41,41,41,]),'initial_value':([338,411,],[363,419,]),'variant_list':([217,],[232,]),'non_labeled_closed_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[270,270,270,337,270,270,270,270,270,337,270,270,270,270,270,270,270,]),'functional_parameter_specification':([77,188,],[148,148,]),'constant':([44,72,162,172,173,175,201,217,222,237,272,274,275,321,382,],[83,83,193,83,83,83,83,228,83,83,312,228,228,228,228,]),'semicolon':([5,29,32,38,39,42,64,66,93,145,168,232,242,304,346,352,],[15,71,75,80,81,82,131,133,165,188,198,275,293,293,380,382,]),'function_designator':([240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,]),'new_structured_type':([44,72,173,201,237,],[87,87,87,87,87,]),'file':([0,],[6,]),'variant_selector':([167,],[194,]),'procedure_and_function_declaration_part':([18,183,],[35,212,]),'non_string':([44,72,85,162,172,173,175,201,217,222,237,272,274,275,321,382,],[90,90,164,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'variable_access':([226,240,249,264,267,269,280,286,288,289,293,295,296,301,311,316,318,319,327,335,338,339,340,341,342,354,356,359,367,371,372,377,378,385,389,392,394,401,410,411,412,413,414,418,426,427,430,],[246,283,283,246,283,309,283,283,283,283,246,283,283,246,283,283,283,283,283,246,283,283,246,373,246,283,283,283,283,283,309,283,283,246,283,246,246,246,246,283,246,246,283,246,283,246,246,]),'base_type':([175,],[211,]),'member_designator':([288,354,],[323,386,]),'structured_type':([44,72,104,173,201,237,],[101,101,174,101,101,101,]),'open_while_statement':([226,264,293,301,335,340,342,385,392,394,401,410,412,413,418,427,430,],[268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,]),'mulop':([45,179,290,349,],[111,111,327,327,]),'variant':([217,275,],[230,315,]),'unsigned_constant':([23,47,58,60,111,115,118,128,240,249,267,280,286,288,289,295,296,311,316,318,319,327,338,339,354,356,359,367,371,377,378,389,411,414,426,],[57,57,57,57,57,57,57,57,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,]),'function_identification':([18,75,183,],[38,38,38,]),'variant_part':([95,198,313,380,],[169,220,347,400,]),'function_block':([80,82,],[153,161,]),'cexponentiation':([23,47,60,111,115,118,128,],[61,61,61,61,61,61,181,]),'identifier_list':([17,27,71,77,95,97,140,188,198,313,380,],[30,70,30,146,170,171,185,146,170,170,170,]),'case_constant_list':([217,275,321,382,],[231,231,353,353,]),'relop':([52,282,],[118,319,]),'formal_parameter_section':([77,188,],[150,214,]),'block':([15,80,81,82,],[26,154,159,154,]),'result_type':([152,190,],[192,216,]),'tag_type':([167,218,],[197,234,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> program','file',1,'p_file_1','src/parser.py',7),
  ('file -> module','file',1,'p_file_2','src/parser.py',10),
  ('program -> program_heading semicolon block DOT','program',4,'p_program_1','src/parser.py',15),
  ('program_heading -> RESERVED_PROGRAM identifier','program_heading',2,'p_program_heading_1','src/parser.py',20),
  ('program_heading -> RESERVED_PROGRAM identifier LPAREN identifier_list RPAREN','program_heading',5,'p_program_heading_2','src/parser.py',23),
  ('identifier_list -> identifier_list comma identifier','identifier_list',3,'p_identifier_list_1','src/parser.py',28),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list_2','src/parser.py',31),
  ('block -> label_declaration_part constant_definition_part type_definition_part variable_declaration_part procedure_and_function_declaration_part statement_part','block',6,'p_block_1','src/parser.py',36),
  ('module -> constant_definition_part type_definition_part variable_declaration_part procedure_and_function_declaration_part','module',4,'p_module_1','src/parser.py',41),
  ('label_declaration_part -> RESERVED_LABEL label_list semicolon','label_declaration_part',3,'p_label_declaration_part_1','src/parser.py',46),
  ('label_declaration_part -> <empty>','label_declaration_part',0,'p_label_declaration_part_2','src/parser.py',49),
  ('label_list -> label_list comma label','label_list',3,'p_label_list_1','src/parser.py',54),
  ('label_list -> label','label_list',1,'p_label_list_2','src/parser.py',57),
  ('label -> DIGITSEQ','label',1,'p_label_1','src/parser.py',62),
  ('constant_definition_part -> RESERVED_CONST constant_list','constant_definition_part',2,'p_constant_definition_part_1','src/parser.py',67),
  ('constant_definition_part -> <empty>','constant_definition_part',0,'p_constant_definition_part_2','src/parser.py',70),
  ('constant_list -> constant_list constant_definition','constant_list',2,'p_constant_list_1','src/parser.py',75),
  ('constant_list -> constant_definition','constant_list',1,'p_constant_list_2','src/parser.py',78),
  ('constant_definition -> identifier EQ cexpression semicolon','constant_definition',4,'p_constant_definition_1','src/parser.py',83),
  ('cexpression -> csimple_expression','cexpression',1,'p_cexpression_1','src/parser.py',88),
  ('cexpression -> csimple_expression relop csimple_expression','cexpression',3,'p_cexpression_2','src/parser.py',91),
  ('csimple_expression -> cterm','csimple_expression',1,'p_csimple_expression_1','src/parser.py',96),
  ('csimple_expression -> csimple_expression addop cterm','csimple_expression',3,'p_csimple_expression_2','src/parser.py',99),
  ('cterm -> cfactor','cterm',1,'p_cterm_1','src/parser.py',104),
  ('cterm -> cterm mulop cfactor','cterm',3,'p_cterm_2','src/parser.py',107),
  ('cfactor -> sign cfactor','cfactor',2,'p_cfactor_1','src/parser.py',112),
  ('cfactor -> cexponentiation','cfactor',1,'p_cfactor_2','src/parser.py',115),
  ('cexponentiation -> cprimary','cexponentiation',1,'p_cexponentiation_1','src/parser.py',120),
  ('cexponentiation -> cprimary POWER cexponentiation','cexponentiation',3,'p_cexponentiation_2','src/parser.py',123),
  ('cprimary -> identifier','cprimary',1,'p_cprimary_1','src/parser.py',128),
  ('cprimary -> LPAREN cexpression RPAREN','cprimary',3,'p_cprimary_2','src/parser.py',131),
  ('cprimary -> unsigned_constant','cprimary',1,'p_cprimary_3','src/parser.py',134),
  ('cprimary -> RESERVED_NOT cprimary','cprimary',2,'p_cprimary_4','src/parser.py',137),
  ('constant -> non_string','constant',1,'p_constant_1','src/parser.py',142),
  ('constant -> sign non_string','constant',2,'p_constant_2','src/parser.py',145),
  ('constant -> STRING','constant',1,'p_constant_3','src/parser.py',148),
  ('sign -> PLUS','sign',1,'p_sign_1','src/parser.py',153),
  ('sign -> MINUS','sign',1,'p_sign_2','src/parser.py',156),
  ('non_string -> DIGITSEQ','non_string',1,'p_non_string_1','src/parser.py',161),
  ('non_string -> identifier','non_string',1,'p_non_string_2','src/parser.py',164),
  ('type_definition_part -> RESERVED_TYPE type_definition_list','type_definition_part',2,'p_type_definition_part_1','src/parser.py',169),
  ('type_definition_part -> <empty>','type_definition_part',0,'p_type_definition_part_2','src/parser.py',172),
  ('type_definition_list -> type_definition_list type_definition','type_definition_list',2,'p_type_definition_list_1','src/parser.py',177),
  ('type_definition_list -> type_definition','type_definition_list',1,'p_type_definition_list_2','src/parser.py',180),
  ('type_definition -> identifier EQ type_denoter semicolon','type_definition',4,'p_type_definition_1','src/parser.py',185),
  ('type_denoter -> identifier','type_denoter',1,'p_type_denoter_1','src/parser.py',190),
  ('type_denoter -> new_type','type_denoter',1,'p_type_denoter_2','src/parser.py',193),
  ('new_type -> new_ordinal_type','new_type',1,'p_new_type_1','src/parser.py',198),
  ('new_type -> new_structured_type','new_type',1,'p_new_type_2','src/parser.py',201),
  ('new_type -> new_pointer_type','new_type',1,'p_new_type_3','src/parser.py',204),
  ('new_ordinal_type -> enumerated_type','new_ordinal_type',1,'p_new_ordinal_type_1','src/parser.py',209),
  ('new_ordinal_type -> subrange_type','new_ordinal_type',1,'p_new_ordinal_type_2','src/parser.py',212),
  ('enumerated_type -> LPAREN identifier_list RPAREN','enumerated_type',3,'p_enumerated_type_1','src/parser.py',217),
  ('subrange_type -> constant DOTDOT constant','subrange_type',3,'p_subrange_type_1','src/parser.py',222),
  ('new_structured_type -> structured_type','new_structured_type',1,'p_new_structured_type_1','src/parser.py',227),
  ('new_structured_type -> RESERVED_PACKED structured_type','new_structured_type',2,'p_new_structured_type_2','src/parser.py',230),
  ('structured_type -> array_type','structured_type',1,'p_structured_type_1','src/parser.py',235),
  ('structured_type -> record_type','structured_type',1,'p_structured_type_2','src/parser.py',238),
  ('structured_type -> set_type','structured_type',1,'p_structured_type_3','src/parser.py',241),
  ('structured_type -> file_type','structured_type',1,'p_structured_type_4','src/parser.py',244),
  ('array_type -> RESERVED_ARRAY L_SQUARE_BRACKET index_list R_SQUARE_BRACKET RESERVED_OF component_type','array_type',6,'p_array_type_1','src/parser.py',249),
  ('index_list -> index_list comma index_type','index_list',3,'p_index_list_1','src/parser.py',254),
  ('index_list -> index_type','index_list',1,'p_index_list_2','src/parser.py',257),
  ('index_type -> ordinal_type','index_type',1,'p_index_type_1','src/parser.py',262),
  ('ordinal_type -> new_ordinal_type','ordinal_type',1,'p_ordinal_type_1','src/parser.py',267),
  ('ordinal_type -> identifier','ordinal_type',1,'p_ordinal_type_2','src/parser.py',270),
  ('component_type -> type_denoter','component_type',1,'p_component_type_1','src/parser.py',275),
  ('record_type -> RESERVED_RECORD record_section_list RESERVED_END','record_type',3,'p_record_type_1','src/parser.py',280),
  ('record_type -> RESERVED_RECORD record_section_list semicolon variant_part RESERVED_END','record_type',5,'p_record_type_2','src/parser.py',283),
  ('record_type -> RESERVED_RECORD variant_part RESERVED_END','record_type',3,'p_record_type_3','src/parser.py',286),
  ('record_section_list -> record_section_list semicolon record_section','record_section_list',3,'p_record_section_list_1','src/parser.py',291),
  ('record_section_list -> record_section','record_section_list',1,'p_record_section_list_2','src/parser.py',294),
  ('record_section -> identifier_list COLON type_denoter','record_section',3,'p_record_section_1','src/parser.py',299),
  ('variant_part -> RESERVED_CASE variant_selector RESERVED_OF variant_list semicolon','variant_part',5,'p_variant_part_1','src/parser.py',304),
  ('variant_part -> RESERVED_CASE variant_selector RESERVED_OF variant_list','variant_part',4,'p_variant_part_2','src/parser.py',307),
  ('variant_part -> <empty>','variant_part',0,'p_variant_part_3','src/parser.py',310),
  ('variant_selector -> tag_field COLON tag_type','variant_selector',3,'p_variant_selector_1','src/parser.py',315),
  ('variant_selector -> tag_type','variant_selector',1,'p_variant_selector_2','src/parser.py',318),
  ('variant_list -> variant_list semicolon variant','variant_list',3,'p_variant_list_1','src/parser.py',323),
  ('variant_list -> variant','variant_list',1,'p_variant_list_2','src/parser.py',326),
  ('variant -> case_constant_list COLON LPAREN record_section_list RPAREN','variant',5,'p_variant_1','src/parser.py',331),
  ('variant -> case_constant_list COLON LPAREN record_section_list semicolon variant_part RPAREN','variant',7,'p_variant_2','src/parser.py',334),
  ('variant -> case_constant_list COLON LPAREN variant_part RPAREN','variant',5,'p_variant_3','src/parser.py',337),
  ('case_constant_list -> case_constant_list comma case_constant','case_constant_list',3,'p_case_constant_list_1','src/parser.py',342),
  ('case_constant_list -> case_constant','case_constant_list',1,'p_case_constant_list_2','src/parser.py',345),
  ('case_constant -> constant','case_constant',1,'p_case_constant_1','src/parser.py',350),
  ('case_constant -> constant DOTDOT constant','case_constant',3,'p_case_constant_2','src/parser.py',353),
  ('tag_field -> identifier','tag_field',1,'p_tag_field_1','src/parser.py',358),
  ('tag_type -> identifier','tag_type',1,'p_tag_type_1','src/parser.py',363),
  ('set_type -> RESERVED_SET RESERVED_OF base_type','set_type',3,'p_set_type_1','src/parser.py',368),
  ('base_type -> ordinal_type','base_type',1,'p_base_type_1','src/parser.py',373),
  ('file_type -> RESERVED_FILE RESERVED_OF component_type','file_type',3,'p_file_type_1','src/parser.py',378),
  ('new_pointer_type -> POINTER domain_type','new_pointer_type',2,'p_new_pointer_type_1','src/parser.py',383),
  ('domain_type -> identifier','domain_type',1,'p_domain_type_1','src/parser.py',388),
  ('variable_declaration_part -> RESERVED_VAR variable_declaration_list semicolon','variable_declaration_part',3,'p_variable_declaration_part_1','src/parser.py',393),
  ('variable_declaration_part -> <empty>','variable_declaration_part',0,'p_variable_declaration_part_2','src/parser.py',396),
  ('variable_declaration_list -> variable_declaration_list semicolon variable_declaration','variable_declaration_list',3,'p_variable_declaration_list_1','src/parser.py',401),
  ('variable_declaration_list -> variable_declaration','variable_declaration_list',1,'p_variable_declaration_list_2','src/parser.py',404),
  ('variable_declaration -> identifier_list COLON type_denoter','variable_declaration',3,'p_variable_declaration_1','src/parser.py',409),
  ('procedure_and_function_declaration_part -> proc_or_func_declaration_list semicolon','procedure_and_function_declaration_part',2,'p_procedure_and_function_declaration_part_1','src/parser.py',414),
  ('procedure_and_function_declaration_part -> <empty>','procedure_and_function_declaration_part',0,'p_procedure_and_function_declaration_part_2','src/parser.py',417),
  ('proc_or_func_declaration_list -> proc_or_func_declaration_list semicolon proc_or_func_declaration','proc_or_func_declaration_list',3,'p_proc_or_func_declaration_list_1','src/parser.py',422),
  ('proc_or_func_declaration_list -> proc_or_func_declaration','proc_or_func_declaration_list',1,'p_proc_or_func_declaration_list_2','src/parser.py',425),
  ('proc_or_func_declaration -> procedure_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration_1','src/parser.py',430),
  ('proc_or_func_declaration -> function_declaration','proc_or_func_declaration',1,'p_proc_or_func_declaration_2','src/parser.py',433),
  ('procedure_declaration -> procedure_heading semicolon directive','procedure_declaration',3,'p_procedure_declaration_1','src/parser.py',438),
  ('procedure_declaration -> procedure_heading semicolon procedure_block','procedure_declaration',3,'p_procedure_declaration_2','src/parser.py',441),
  ('procedure_heading -> procedure_identification','procedure_heading',1,'p_procedure_heading_1','src/parser.py',446),
  ('procedure_heading -> procedure_identification formal_parameter_list','procedure_heading',2,'p_procedure_heading_2','src/parser.py',449),
  ('directive -> RESERVED_FORWARD','directive',1,'p_directive_1','src/parser.py',454),
  ('directive -> RESERVED_EXTERNAL','directive',1,'p_directive_2','src/parser.py',457),
  ('formal_parameter_list -> LPAREN formal_parameter_section_list RPAREN','formal_parameter_list',3,'p_formal_parameter_list_1','src/parser.py',462),
  ('formal_parameter_section_list -> formal_parameter_section_list semicolon formal_parameter_section','formal_parameter_section_list',3,'p_formal_parameter_section_list_1','src/parser.py',467),
  ('formal_parameter_section_list -> formal_parameter_section','formal_parameter_section_list',1,'p_formal_parameter_section_list_2','src/parser.py',470),
  ('formal_parameter_section -> value_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_1','src/parser.py',475),
  ('formal_parameter_section -> variable_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_2','src/parser.py',478),
  ('formal_parameter_section -> procedural_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_3','src/parser.py',481),
  ('formal_parameter_section -> functional_parameter_specification','formal_parameter_section',1,'p_formal_parameter_section_4','src/parser.py',484),
  ('value_parameter_specification -> identifier_list COLON identifier','value_parameter_specification',3,'p_value_parameter_specification_1','src/parser.py',489),
  ('variable_parameter_specification -> RESERVED_VAR identifier_list COLON identifier','variable_parameter_specification',4,'p_variable_parameter_specification_1','src/parser.py',494),
  ('procedural_parameter_specification -> procedure_heading','procedural_parameter_specification',1,'p_procedural_parameter_specification_1','src/parser.py',499),
  ('functional_parameter_specification -> function_heading','functional_parameter_specification',1,'p_functional_parameter_specification_1','src/parser.py',504),
  ('procedure_identification -> RESERVED_PROCEDURE identifier','procedure_identification',2,'p_procedure_identification_1','src/parser.py',509),
  ('procedure_block -> block','procedure_block',1,'p_procedure_block_1','src/parser.py',514),
  ('function_declaration -> function_heading semicolon directive','function_declaration',3,'p_function_declaration_1','src/parser.py',519),
  ('function_declaration -> function_identification semicolon function_block','function_declaration',3,'p_function_declaration_2','src/parser.py',522),
  ('function_declaration -> function_heading semicolon function_block','function_declaration',3,'p_function_declaration_3','src/parser.py',525),
  ('function_heading -> RESERVED_FUNCTION identifier COLON result_type','function_heading',4,'p_function_heading_1','src/parser.py',530),
  ('function_heading -> RESERVED_FUNCTION identifier formal_parameter_list COLON result_type','function_heading',5,'p_function_heading_2','src/parser.py',533),
  ('result_type -> identifier','result_type',1,'p_result_type_1','src/parser.py',538),
  ('function_identification -> RESERVED_FUNCTION identifier','function_identification',2,'p_function_identification_1','src/parser.py',543),
  ('function_block -> block','function_block',1,'p_function_block_1','src/parser.py',548),
  ('statement_part -> compound_statement','statement_part',1,'p_statement_part_1','src/parser.py',553),
  ('compound_statement -> RESERVED_BEGIN statement_sequence RESERVED_END','compound_statement',3,'p_compound_statement_1','src/parser.py',558),
  ('statement_sequence -> statement_sequence semicolon statement','statement_sequence',3,'p_statement_sequence_1','src/parser.py',563),
  ('statement_sequence -> statement','statement_sequence',1,'p_statement_sequence_2','src/parser.py',566),
  ('statement -> open_statement','statement',1,'p_statement_1','src/parser.py',571),
  ('statement -> closed_statement','statement',1,'p_statement_2','src/parser.py',574),
  ('open_statement -> label COLON non_labeled_open_statement','open_statement',3,'p_open_statement_1','src/parser.py',579),
  ('open_statement -> non_labeled_open_statement','open_statement',1,'p_open_statement_2','src/parser.py',582),
  ('closed_statement -> label COLON non_labeled_closed_statement','closed_statement',3,'p_closed_statement_1','src/parser.py',587),
  ('closed_statement -> non_labeled_closed_statement','closed_statement',1,'p_closed_statement_2','src/parser.py',590),
  ('non_labeled_closed_statement -> assignment_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_1','src/parser.py',595),
  ('non_labeled_closed_statement -> procedure_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_2','src/parser.py',598),
  ('non_labeled_closed_statement -> goto_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_3','src/parser.py',601),
  ('non_labeled_closed_statement -> compound_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_4','src/parser.py',604),
  ('non_labeled_closed_statement -> case_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_5','src/parser.py',607),
  ('non_labeled_closed_statement -> repeat_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_6','src/parser.py',610),
  ('non_labeled_closed_statement -> closed_with_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_7','src/parser.py',613),
  ('non_labeled_closed_statement -> closed_if_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_8','src/parser.py',616),
  ('non_labeled_closed_statement -> closed_while_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_9','src/parser.py',619),
  ('non_labeled_closed_statement -> closed_for_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_10','src/parser.py',622),
  ('non_labeled_closed_statement -> exit_statement','non_labeled_closed_statement',1,'p_non_labeled_closed_statement_11','src/parser.py',625),
  ('non_labeled_closed_statement -> <empty>','non_labeled_closed_statement',0,'p_non_labeled_closed_statement_12','src/parser.py',628),
  ('non_labeled_open_statement -> open_with_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_1','src/parser.py',633),
  ('non_labeled_open_statement -> open_if_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_2','src/parser.py',636),
  ('non_labeled_open_statement -> open_while_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_3','src/parser.py',639),
  ('non_labeled_open_statement -> open_for_statement','non_labeled_open_statement',1,'p_non_labeled_open_statement_4','src/parser.py',642),
  ('repeat_statement -> RESERVED_REPEAT statement_sequence RESERVED_UNTIL boolean_expression','repeat_statement',4,'p_repeat_statement_1','src/parser.py',647),
  ('open_while_statement -> RESERVED_WHILE boolean_expression RESERVED_DO open_statement','open_while_statement',4,'p_open_while_statement_1','src/parser.py',652),
  ('closed_while_statement -> RESERVED_WHILE boolean_expression RESERVED_DO closed_statement','closed_while_statement',4,'p_closed_while_statement_1','src/parser.py',657),
  ('open_for_statement -> RESERVED_FOR control_variable ASSIGNMENT initial_value direction final_value RESERVED_DO open_statement','open_for_statement',8,'p_open_for_statement_1','src/parser.py',662),
  ('closed_for_statement -> RESERVED_FOR control_variable ASSIGNMENT initial_value direction final_value RESERVED_DO closed_statement','closed_for_statement',8,'p_closed_for_statement_1','src/parser.py',667),
  ('open_with_statement -> RESERVED_WITH record_variable_list RESERVED_DO open_statement','open_with_statement',4,'p_open_with_statement_1','src/parser.py',672),
  ('closed_with_statement -> RESERVED_WITH record_variable_list RESERVED_DO closed_statement','closed_with_statement',4,'p_closed_with_statement_1','src/parser.py',677),
  ('open_if_statement -> RESERVED_IF boolean_expression RESERVED_THEN statement','open_if_statement',4,'p_open_if_statement_1','src/parser.py',682),
  ('open_if_statement -> RESERVED_IF boolean_expression RESERVED_THEN closed_statement RESERVED_ELSE open_statement','open_if_statement',6,'p_open_if_statement_2','src/parser.py',685),
  ('closed_if_statement -> RESERVED_IF boolean_expression RESERVED_THEN closed_statement RESERVED_ELSE closed_statement','closed_if_statement',6,'p_closed_if_statement_1','src/parser.py',690),
  ('assignment_statement -> variable_access ASSIGNMENT expression','assignment_statement',3,'p_assignment_statement_1','src/parser.py',695),
  ('exit_statement -> RESERVED_EXIT','exit_statement',1,'p_exit_statement_1','src/parser.py',699),
  ('variable_access -> identifier','variable_access',1,'p_variable_access_1','src/parser.py',702),
  ('variable_access -> indexed_variable','variable_access',1,'p_variable_access_2','src/parser.py',705),
  ('variable_access -> field_designator','variable_access',1,'p_variable_access_3','src/parser.py',708),
  ('variable_access -> variable_access POINTER','variable_access',2,'p_variable_access_4','src/parser.py',711),
  ('indexed_variable -> variable_access L_SQUARE_BRACKET index_expression_list R_SQUARE_BRACKET','indexed_variable',4,'p_indexed_variable_1','src/parser.py',716),
  ('index_expression_list -> index_expression_list comma index_expression','index_expression_list',3,'p_index_expression_list_1','src/parser.py',721),
  ('index_expression_list -> index_expression','index_expression_list',1,'p_index_expression_list_2','src/parser.py',724),
  ('index_expression -> expression','index_expression',1,'p_index_expression_1','src/parser.py',729),
  ('field_designator -> variable_access DOT identifier','field_designator',3,'p_field_designator_1','src/parser.py',734),
  ('procedure_statement -> identifier params','procedure_statement',2,'p_procedure_statement_1','src/parser.py',739),
  ('procedure_statement -> identifier','procedure_statement',1,'p_procedure_statement_2','src/parser.py',742),
  ('params -> LPAREN actual_parameter_list RPAREN','params',3,'p_params_1','src/parser.py',747),
  ('actual_parameter_list -> actual_parameter_list comma actual_parameter','actual_parameter_list',3,'p_actual_parameter_list_1','src/parser.py',752),
  ('actual_parameter_list -> actual_parameter','actual_parameter_list',1,'p_actual_parameter_list_2','src/parser.py',755),
  ('actual_parameter -> expression','actual_parameter',1,'p_actual_parameter_1','src/parser.py',760),
  ('actual_parameter -> expression COLON expression','actual_parameter',3,'p_actual_parameter_2','src/parser.py',763),
  ('actual_parameter -> expression COLON expression COLON expression','actual_parameter',5,'p_actual_parameter_3','src/parser.py',766),
  ('goto_statement -> RESERVED_GOTO label','goto_statement',2,'p_goto_statement_1','src/parser.py',771),
  ('case_statement -> RESERVED_CASE case_index RESERVED_OF case_list_element_list RESERVED_END','case_statement',5,'p_case_statement_1','src/parser.py',776),
  ('case_statement -> RESERVED_CASE case_index RESERVED_OF case_list_element_list SEMI_COLON RESERVED_END','case_statement',6,'p_case_statement_2','src/parser.py',779),
  ('case_statement -> RESERVED_CASE case_index RESERVED_OF case_list_element_list semicolon otherwisepart statement RESERVED_END','case_statement',8,'p_case_statement_3','src/parser.py',782),
  ('case_statement -> RESERVED_CASE case_index RESERVED_OF case_list_element_list semicolon otherwisepart statement SEMI_COLON RESERVED_END','case_statement',9,'p_case_statement_4','src/parser.py',785),
  ('case_index -> expression','case_index',1,'p_case_index_1','src/parser.py',790),
  ('case_list_element_list -> case_list_element_list semicolon case_list_element','case_list_element_list',3,'p_case_list_element_list_1','src/parser.py',795),
  ('case_list_element_list -> case_list_element','case_list_element_list',1,'p_case_list_element_list_2','src/parser.py',798),
  ('case_list_element -> case_constant_list COLON statement','case_list_element',3,'p_case_list_element_1','src/parser.py',803),
  ('otherwisepart -> RESERVED_OTHERWISE','otherwisepart',1,'p_otherwisepart_1','src/parser.py',808),
  ('otherwisepart -> RESERVED_OTHERWISE COLON','otherwisepart',2,'p_otherwisepart_2','src/parser.py',811),
  ('control_variable -> identifier','control_variable',1,'p_control_variable_1','src/parser.py',816),
  ('initial_value -> expression','initial_value',1,'p_initial_value_1','src/parser.py',821),
  ('direction -> RESERVED_TO','direction',1,'p_direction_1','src/parser.py',826),
  ('direction -> RESERVED_DOWNTO','direction',1,'p_direction_2','src/parser.py',829),
  ('final_value -> expression','final_value',1,'p_final_value_1','src/parser.py',834),
  ('record_variable_list -> record_variable_list comma variable_access','record_variable_list',3,'p_record_variable_list_1','src/parser.py',839),
  ('record_variable_list -> variable_access','record_variable_list',1,'p_record_variable_list_2','src/parser.py',842),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression_1','src/parser.py',847),
  ('expression -> simple_expression','expression',1,'p_expression_1','src/parser.py',852),
  ('expression -> simple_expression relop simple_expression','expression',3,'p_expression_2','src/parser.py',855),
  ('simple_expression -> term','simple_expression',1,'p_simple_expression_1','src/parser.py',860),
  ('simple_expression -> simple_expression addop term','simple_expression',3,'p_simple_expression_2','src/parser.py',863),
  ('term -> factor','term',1,'p_term_1','src/parser.py',868),
  ('term -> term mulop factor','term',3,'p_term_2','src/parser.py',871),
  ('factor -> sign factor','factor',2,'p_factor_1','src/parser.py',876),
  ('factor -> exponentiation','factor',1,'p_factor_2','src/parser.py',879),
  ('exponentiation -> primary','exponentiation',1,'p_exponentiation_1','src/parser.py',884),
  ('exponentiation -> primary POWER exponentiation','exponentiation',3,'p_exponentiation_2','src/parser.py',887),
  ('primary -> variable_access','primary',1,'p_primary_1','src/parser.py',892),
  ('primary -> unsigned_constant','primary',1,'p_primary_2','src/parser.py',895),
  ('primary -> function_designator','primary',1,'p_primary_3','src/parser.py',898),
  ('primary -> set_constructor','primary',1,'p_primary_4','src/parser.py',901),
  ('primary -> LPAREN expression RPAREN','primary',3,'p_primary_5','src/parser.py',904),
  ('primary -> RESERVED_NOT primary','primary',2,'p_primary_6','src/parser.py',907),
  ('unsigned_constant -> unsigned_number','unsigned_constant',1,'p_unsigned_constant_1','src/parser.py',912),
  ('unsigned_constant -> STRING','unsigned_constant',1,'p_unsigned_constant_2','src/parser.py',915),
  ('unsigned_constant -> RESERVED_NIL','unsigned_constant',1,'p_unsigned_constant_3','src/parser.py',918),
  ('unsigned_number -> unsigned_integer','unsigned_number',1,'p_unsigned_number_1','src/parser.py',923),
  ('unsigned_number -> unsigned_real','unsigned_number',1,'p_unsigned_number_2','src/parser.py',926),
  ('unsigned_integer -> DIGITSEQ','unsigned_integer',1,'p_unsigned_integer_1','src/parser.py',931),
  ('unsigned_real -> REALNUMBER','unsigned_real',1,'p_unsigned_real_1','src/parser.py',936),
  ('function_designator -> identifier params','function_designator',2,'p_function_designator_1','src/parser.py',941),
  ('set_constructor -> L_SQUARE_BRACKET member_designator_list R_SQUARE_BRACKET','set_constructor',3,'p_set_constructor_1','src/parser.py',946),
  ('set_constructor -> L_SQUARE_BRACKET R_SQUARE_BRACKET','set_constructor',2,'p_set_constructor_2','src/parser.py',949),
  ('member_designator_list -> member_designator_list comma member_designator','member_designator_list',3,'p_member_designator_list_1','src/parser.py',954),
  ('member_designator_list -> member_designator','member_designator_list',1,'p_member_designator_list_2','src/parser.py',957),
  ('member_designator -> member_designator DOTDOT expression','member_designator',3,'p_member_designator_1','src/parser.py',962),
  ('member_designator -> expression','member_designator',1,'p_member_designator_2','src/parser.py',965),
  ('addop -> PLUS','addop',1,'p_addop_1','src/parser.py',970),
  ('addop -> MINUS','addop',1,'p_addop_2','src/parser.py',973),
  ('addop -> RESERVED_OR','addop',1,'p_addop_3','src/parser.py',976),
  ('addop -> RESERVED_XOR','addop',1,'p_addop_4','src/parser.py',979),
  ('mulop -> TIMES','mulop',1,'p_mulop_1','src/parser.py',983),
  ('mulop -> DIVIDE','mulop',1,'p_mulop_2','src/parser.py',986),
  ('mulop -> RESERVED_DIV','mulop',1,'p_mulop_3','src/parser.py',989),
  ('mulop -> RESERVED_MOD','mulop',1,'p_mulop_4','src/parser.py',992),
  ('mulop -> RESERVED_AND','mulop',1,'p_mulop_5','src/parser.py',995),
  ('relop -> EQ','relop',1,'p_relop_1','src/parser.py',1000),
  ('relop -> NE','relop',1,'p_relop_2','src/parser.py',1003),
  ('relop -> LT','relop',1,'p_relop_3','src/parser.py',1006),
  ('relop -> GT','relop',1,'p_relop_4','src/parser.py',1009),
  ('relop -> LEQ','relop',1,'p_relop_5','src/parser.py',1012),
  ('relop -> GEQ','relop',1,'p_relop_6','src/parser.py',1015),
  ('relop -> RESERVED_IN','relop',1,'p_relop_7','src/parser.py',1018),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier_1','src/parser.py',1023),
  ('semicolon -> SEMI_COLON','semicolon',1,'p_semicolon_1','src/parser.py',1028),
  ('comma -> COMMA','comma',1,'p_comma_1','src/parser.py',1033),
]
