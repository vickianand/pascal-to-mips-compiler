var a:array[1..40] of longint;	\\ RESERVED_VAR IDENTIFIER COLON RESERVED_ARRAY L_SQUARE_BRACKET NUMBER DOT DOT NUMBER R_SQUARE_BRACKET RESERVED_OF IDENTIFIER SEMI_COLON
    t,i,j,n,x,y:longint;	\\ IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COLON IDENTIFIER SEMI_COLON
 begin	\\ RESERVED_BEGIN
Illegal character '#'
Illegal character '$'
Illegal character '%'
Illegal character '^'
Illegal character '&'
  a[1]:=1;   (**********) #$%^&*( *)	\\ IDENTIFIER L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET COLON ASSIGNMENT NUMBER SEMI_COLON COMMENT TIMES LPAREN TIMES RPAREN
   for i:=2 to 40 do a[i]:=a[i-1] xor i;	\\ RESERVED_FOR IDENTIFIER COLON ASSIGNMENT NUMBER RESERVED_TO NUMBER RESERVED_DO IDENTIFIER L_SQUARE_BRACKET IDENTIFIER R_SQUARE_BRACKET COLON ASSIGNMENT IDENTIFIER L_SQUARE_BRACKET IDENTIFIER MINUS NUMBER R_SQUARE_BRACKET RESERVED_XOR IDENTIFIER SEMI_COLON
    read(t);	\\ MODIFIER_READ LPAREN IDENTIFIER RPAREN SEMI_COLON
Illegal character '''
     for i:=1 'to the' do begin'	\\ RESERVED_FOR IDENTIFIER COLON ASSIGNMENT NUMBER STRING RESERVED_DO RESERVED_BEGIN
      read(n);	\\ MODIFIER_READ LPAREN IDENTIFIER RPAREN SEMI_COLON
       for j:=1 to n do read(x,y);	\\ RESERVED_FOR IDENTIFIER COLON ASSIGNMENT NUMBER RESERVED_TO IDENTIFIER RESERVED_DO MODIFIER_READ LPAREN IDENTIFIER COMMA IDENTIFIER RPAREN SEMI_COLON
        writeln(a[n]);	/* print the result */	\\ IDENTIFIER LPAREN IDENTIFIER L_SQUARE_BRACKET IDENTIFIER R_SQUARE_BRACKET RPAREN SEMI_COLON COMMENT
      end;		{ and we are done }	\\ RESERVED_END SEMI_COLON COMMENT
	\\
	\\
end.	\\ RESERVED_END DOT
